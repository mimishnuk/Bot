import sqlite3
from sqlite3 import Error

def create_connection(db_file):
    conn = None

    try:
        conn = sqlite3.connect(db_file)
    except Error as e:
        print(e)

    return conn

def create_table(conn, sql):
    try:
        cursor = conn.cursor()
        cursor.execute(sql)

    except Error as e:
        print(e)

    return conn


def select_all_product(conn):
    try:
        cursor = conn.cursor()
        cursor.execute('''SELECT * FROM products''')

        rows = cursor.fetchall()

        for row in rows:
            print(row)
    except Error as e:
        print(e)


def select_students_by_price_and_quantity(conn, quantity, price_limit):
    try:
        sql = '''SELECT * FROM products WHERE price <= ? and quantity >= ?'''
        cursor = conn.cursor()
        cursor.execute(sql, (quantity, price_limit,))

        rows = cursor.fetchall()

        for row in rows:
            print(row)
    except Error as e:
        print(e)


def update_product(conn, product):
    try:
        sql = '''
        UPDATE products SET price = ?, quantity = ? WHERE id = ?
        '''
        cursor = conn.cursor()
        cursor.execute(sql, product)
        conn.commit()
    except Error as e:
        print(e)

def delete_product(conn, id):
    try:
        sql = '''
        DELETE FROM products WHERE id = ?
        '''
        cursor = conn.cursor()
        cursor.execute(sql, (id,))
        conn.commit()
    except Error as e:
        print(e)

def search_by_product(conn, word):
    try:
        sql = '''SELECT * FROM products WHERE product_title LIKE ?'''
        cursor = conn.cursor()
        cursor.execute(sql, ('%'+word+'%',))

        rows = cursor.fetchall()
        for row in rows:
            print(row)
    except Error:
        print(Error)

def create_products(conn, product):
    try:
        sql = '''
           INSERT INTO products (product_title, price, quantity) 
           VALUES (?, ?, ?)
           '''
        cursor = conn.cursor()
        cursor.execute(sql, product)
        conn.commit()
    except Error as e:
        print(e)

sql_create_products_table = '''
CREATE TABLE products (
id INTEGER PRIMARY KEY AUTOINCREMENT,
product_title VARCHAR(200) NOT NULL,
price DOUBLE(10,2) NOT NULL DEFAULT 0.0,
quantity INTEGER(5) NOT NULL DEFAULT 0,
'''

db_name = 'hw.db'
connection = create_connection(db_name)
if connection is not None:
#     create_table(connection, sql_create_products_table)
#     create_products(connection, ("RE-PAIR CREAM", 500.21, 5))
#     create_products(connection, ("HAND CREAM", 120.51, 7))
#     create_products(connection, ("SUN BLOCK CREAM", 1200.32, 4))
#     create_products(connection, ("EYE CREAM", 3500.22, 12))
#     create_products(connection, ("NECK CREAM", 530.56, 5))
#     create_products(connection, ("PADS", 9500.99, 3))
#     create_products(connection, ("PILING", 500.21, 6))
#     create_products(connection, ("CLEANSER GEL", 1500.21, 15))
#     create_products(connection, ("SCRUB", 999.99, 7))
#     create_products(connection, ("MASK", 1500.21, 100))
#     create_products(connection, ("SERUM", 1700.21, 4))
#     create_products(connection, ("FLUID", 3450.21, 5))
#     create_products(connection, ("TONER", 590.21, 3))
#     create_products(connection, ("TONIC", 670.21, 5))
#     create_products(connection, ("SHAMPOO", 325.21, 45))

    create_table(connection, sql_create_products_table)
    update_product(connection, (70.0, 2))
    search_by_product(connection, "Toner")
    delete_product(connection, 2)
    select_all_product(connection)
    connection.close()
    print('greate')
